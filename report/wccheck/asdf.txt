The tools and processes described in Broad and Binder \cite{binder} were utilised for this part. 

\section{Reconnaissance}

The online tool DNSInspect provided a warning that all name servers for the site are located on a single C class network \cite{dnsinspect}. This is a possible single point of failure which can be mitigated by spreading the name servers both geologically and topologically. 

Whois shows that the domain name is assigned to two people in West Yorkshire (Alex Parker and Mark Ducadi), at the address Eukhost Ltd, 7 Commercial Street, Morley, West Yorkshire, LS27 8HX. This information can be incredibly useful for social engineering and other exploits, and is required by ICANN. However, many services provide protection for WhoIs information which will mask the data with generic or unrelated contact details \cite{whoisprotec}.

Saving an offline copy of the site and examining the source files using the command \url{wget -m -p -E -k -K -np -v http://cybertest.uk} allowed for further examination. A few commented out lines in the \url{cybertest.uk.html} document provided a link to a motivating cover of the Game of Thrones theme \cite{got}, as well as a test user account \url{testuser@cybertest.uk} with a possible password \url{test underscore user1}. This kind of problem can be avoided through a development cycle involving peer reviews. Once removed, the username and password would likely have to changed or removed from the system in order to avoid it being utilised by attackers in the future. Many Github repositories suffer from a similiar issue, where developers allow configuration files containing sensitive data such as passwords to be publicly available. 

Another commented out section of the HTML file points us to \url{http://cybertest.uk/Server/AboutUs.asp}. This is an Active Server Page file, which suggests that the ASP.NET framework has been used for developing the site. 

The site does not support HTTPS, which means all connections are insecure as communications are made in plain text. Checking network requests and responses made when loading the page in Chrome, we can see that an Apache server is used to serve the website (Figure \ref{fig:servername}). This can be hidden by configuring the servers signature. Knowledge of the server type can help narrow down which attack types to use, and so obscuring this information is crucial.

\section{Scanning}

In order to assess the structure of the target network further, the command \url{nmap -sS -T4 http://cybertest.uk} was used (nmap with aggressive timing and stealth scan i.e. connections left open). A less agressive timing setting would be used if we wanted the scan to be harder to detect. The output (Figure \ref{fig:nmapoutput}) shows that several TCP ports are open. Specifially, the mail ports (pop3, smtps, pop3s, imap). There is also a mysql server running with the standard port open, which could potentially be accessed when coupled with the login details from earlier. Databases should almost never be accessible to the internet, as it is only necessary for the website server to communicate with the database, either through localhost or through a VPN. Since the database is open to the internet, brute forcing is an option. 

The UDP (\url{-sU}) scan was then tried, though this returned no results. From this we can conclude that it is possible that the ports are open, and/or filtered by a firewall. The ACK scan (-sA) was also carried out, which returned that all ports are unfiltered.

Port scans are difficult to protect against, and so it is best to reduce the number of attack vectors that they would present. Closing unecessary services such as HTTP on an HTTPS only web server and not running in X11 mode will reduce the number of vulnerabilities on a system. TCP wrappers can also be used to limit the amount of information available during a port scan, which will compare the requesting IP address to a list of allowed and unallowed IP addresses before determining if access to the service should be provided \cite{portprotec}. This mechanism also protects against IP spoofing, as a reverse DNS lookup will be used on the requesting IP address. 

Not all services can be protected this way (HTTP, SMTP), and if misconfigured can provide another attack vector to be exploited. Software such as PortSentry provides TCP wrappers and other methods of protection. For example, it will redirect packets from suspect IP addresses to a different or dead system in order to hide the system being attacked.
      
A Metasploit project was set up to target the IP address of $ 5.77.35.132 $ (\url{cybertest.uk}) in order to find out more information. After scanning, it was able to determine that MySQL 5.5.57 is being used, and that the server runs on Linux 2.6.X. The last boot time from the server was also shown as being a few day prior. An overview of the scans are shown in figure \ref{fig:overview}.

    
Two HTTPS ports were open. On port $8443$ the login page for UKC hosting could be found. This is the portal to managing the Plesk hosting service. After using the WebScan feature on Metasploit (WMAP), it was revealed that this login page did not have an anti CSRF token. In the OWASP "Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet" \cite{owasp}, it specifically states that form tags using POST requests should be protected from CSRF vulnerabilties. The source for the login page at \url{https://ukc02.uk:8443/get_password.php} clearly features a form with method POST. This login page should preferably be hidden to the internet, and treated similiar to the database serivce, and an anti CSRF token should be used for the login form. 

The reason the CSRF token is necessary is due to the fact that once the user is authenticated to the service, the browser will automatically include credentials related to the site in all subsequent requests. This allows attackers to make requests as if they were the victim. The CSRF token is a piece of information that the attackers would not be able to access, therefore can be used to confirm that the request is from the expected user. Often the exploit uses the 'src' attribute of \textit{img} tags, as they would not be obvious to the user. 
